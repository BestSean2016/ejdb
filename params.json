{"name":"EJDB","tagline":"Embedded JSON Database engine","body":"EJDB aims to be a fast [MongoDB](http://mongodb.org)-like library which can be embedded into C/C++, NodeJS, Python, Lua, Java, Ruby applications under terms of LGPL license.\r\n-------------------------------------------------\r\n\r\nEJDB is the C library based on modified version of [Tokyo Cabinet](http://fallabs.com/tokyocabinet/).\r\nJSON representation of queries and data implemented with API based on [C BSON](https://github.com/mongodb/mongo-c-driver/tree/master/src/)\r\n\r\nNews\r\n===============================\r\n* `2013-06-02` **[Adobe Air Native Extension (ANE) for EJDB (Thanks to @thejustinwalsh)] (https://github.com/thejustinwalsh/airejdb)**\r\n* `2013-05-29` **[EJDB Python 2.7.x binding available](https://github.com/Softmotions/ejdb/blob/master/pyejdb/)**\r\n* `2013-05-06` **[Ruby binding available](https://github.com/Softmotions/ejdb/blob/master/rbejdb/)**\r\n* `2013-05-02` **[NodeJS win32 module available](https://github.com/Softmotions/ejdb/blob/master/tcejdb/WIN32.md#ejdb-nodejs-module-installation)**\r\n* `2013-04-25` **[EJDB and TokyoCabinet API ported to Windows](https://github.com/Softmotions/ejdb/blob/master/tcejdb/WIN32.md)**\r\n* `2013-04-03` **[Java API binding available](https://github.com/Softmotions/ejdb/blob/master/jejdb/)**\r\n* `2013-03-20` **[Lua binding available](https://github.com/Softmotions/ejdb/blob/master/luaejdb/)**\r\n* `2013-02-15` **[EJDB Python3 binding available](https://github.com/Softmotions/ejdb/blob/master/pyejdb/)**\r\n* `2013-02-07` **[Debian packages provided](https://github.com/Softmotions/ejdb/wiki/Debian-Ubuntu-installation)**\r\n* `2013-01-22` **[Collection joins now supported](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**\r\n\r\nFeatures\r\n================================\r\n* LGPL license allows you to embed this library into proprietary software.\r\n* [EJDB and TokyoCabinet API ported to Windows](https://github.com/Softmotions/ejdb/blob/master/tcejdb/WIN32.md)\r\n* MongoDB-like queries and overall philosophy.\r\n* Collection level write locking.\r\n* Collection level transactions.\r\n* String token matching queries: ```$stror``` ```$strand```\r\n* [Node.js](http://nodejs.org) binding\r\n* [Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)\r\n* Python/Lua/Java/Ruby bindings\r\n* [Adobe Air Native Extension (ANE) for EJDB] (https://github.com/thejustinwalsh/airejdb)\r\n* [Pike language binding] (https://github.com/hww3/pike_modules-ejdb)\r\n\r\nDocumentation\r\n================================\r\n\r\n* **[The great intro to the EJDB](http://blog.abigopal.com/post/51616277039/ejdb)**\r\n* **[EJDB Command line interface](https://github.com/Softmotions/ejdb/wiki/EJDB-Command-line-interface)**\r\n* **[NodeJS binding](https://github.com/Softmotions/ejdb#nodejs-binding)**\r\n    * [Installation](https://github.com/Softmotions/ejdb#installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-nodejs-samples)\r\n    * [NodeJS API](https://github.com/Softmotions/ejdb#ejdb-nodejs-api)\r\n* **[Python 2.7/3.x binding](https://github.com/Softmotions/ejdb#ejdb-python-binding)**\r\n* **[Lua binding](https://github.com/Softmotions/ejdb/blob/master/luaejdb/)**\r\n* **[Java binding](https://github.com/Softmotions/ejdb/blob/master/jejdb/)**\r\n* **[Ruby binding](https://github.com/Softmotions/ejdb/blob/master/rbejdb/)**\r\n* **[EJDB C Library](https://github.com/Softmotions/ejdb#ejdb-c-library)**\r\n    * [Building & Installation](https://github.com/Softmotions/ejdb#building--installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-c-samples)\r\n    * [C API](https://github.com/Softmotions/ejdb#c-api)\r\n* **[Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**\r\n\r\nCommunity\r\n================================\r\n* **We use [EJDB Google group](http://groups.google.com/group/ejdb) as our mailing list.**\r\n* [Projects using EJDB](https://github.com/Softmotions/ejdb/wiki/Projects-using-EJDB)\r\n\r\nNodeJS snippet intro\r\n---------------------------------\r\n```JavaScript\r\nvar EJDB = require(\"ejdb\");\r\n//Open zoo DB\r\nvar jb = EJDB.open(\"zoo\", EJDB.DEFAULT_OPEN_MODE | EJDB.JBOTRUNC);\r\n\r\nvar parrot1 = {\r\n    \"name\" : \"Grenny\",\r\n    \"type\" : \"African Grey\",\r\n    \"male\" : true,\r\n    \"age\" : 1,\r\n    \"birthdate\" : new Date(),\r\n    \"likes\" : [\"green color\", \"night\", \"toys\"],\r\n    \"extra1\" : null\r\n};\r\nvar parrot2 = {\r\n    \"name\" : \"Bounty\",\r\n    \"type\" : \"Cockatoo\",\r\n    \"male\" : false,\r\n    \"age\" : 15,\r\n    \"birthdate\" : new Date(),\r\n    \"likes\" : [\"sugar cane\"]\r\n};\r\n\r\njb.save(\"parrots\", [parrot1, parrot2], function(err, oids) {\r\n    if (err) {\r\n        console.error(err);\r\n        return;\r\n    }\r\n    console.log(\"Grenny OID: \" + parrot1[\"_id\"]);\r\n    console.log(\"Bounty OID: \" + parrot2[\"_id\"]);\r\n\r\n    jb.find(\"parrots\",\r\n            {\"likes\" : \"toys\"},\r\n            {\"$orderby\" : {\"name\" : 1}},\r\n            function(err, cursor, count) {\r\n                if (err) {\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n                console.log(\"Found \" + count + \" parrots\");\r\n                while (cursor.next()) {\r\n                    console.log(cursor.field(\"name\") + \" likes toys!\");\r\n                }\r\n                //It's not mandatory to close cursor explicitly\r\n                cursor.close(); \r\n                jb.close(); //Close the database\r\n            });\r\n});\r\n```\r\n\r\nEJDB Python binding\r\n==================================\r\n\r\nOne snippet intro\r\n---------------------------------\r\n\r\n```python\r\nimport pyejdb\r\nfrom datetime import datetime\r\n\r\n#Open database\r\nejdb = pyejdb.EJDB(\"zoo\", pyejdb.DEFAULT_OPEN_MODE | pyejdb.JBOTRUNC)\r\n\r\nparrot1 = {\r\n    \"name\": \"Grenny\",\r\n    \"type\": \"African Grey\",\r\n    \"male\": True,\r\n    \"age\": 1,\r\n    \"birthdate\": datetime.utcnow(),\r\n    \"likes\": [\"green color\", \"night\", \"toys\"],\r\n    \"extra1\": None\r\n}\r\nparrot2 = {\r\n    \"name\": \"Bounty\",\r\n    \"type\": \"Cockatoo\",\r\n    \"male\": False,\r\n    \"age\": 15,\r\n    \"birthdate\": datetime.utcnow(),\r\n    \"likes\": [\"sugar cane\"],\r\n    \"extra1\": None\r\n}\r\nejdb.save(\"parrots2\", parrot1, parrot2)\r\n\r\nwith ejdb.find(\"parrots2\", {\"likes\" : \"toys\"},\r\n          hints={\"$orderby\" : [(\"name\", 1)]}) as cur:\r\n    print(\"found %s parrots\" % len(cur))\r\n    for p in cur:\r\n        print(\"%s likes toys!\" % p[\"name\"])\r\n\r\nejdb.close()\r\n```\r\n**[EJDB Python 2.7/3.x binding](https://github.com/Softmotions/ejdb/blob/master/pyejdb/README.md)**\r\n\r\n\r\nEJDB Lua binding\r\n==================================\r\n\r\nOne snippet intro\r\n---------------------------------\r\n```lua\r\nlocal ejdb = require(\"ejdb\")\r\nlocal inspect = require(\"ejdb.inspect\")\r\nlocal Q = ejdb.Q\r\n\r\n-- Used modes:\r\n-- 'r' - read\r\n-- 'w' - write\r\n-- 'c' - create db if not exists\r\n-- 't' - truncate existing db\r\nlocal db = ejdb.open(\"zoo\", \"rwct\")\r\n\r\n-- Unordered lua table\r\nlocal parrot1 = {\r\n  name = \"Grenny\",\r\n  type = \"African Grey\",\r\n  male = true,\r\n  age = 1,\r\n  birthhdate = ejdb.toDateNow(),\r\n  likes = { \"green color\", \"night\", \"toys\" },\r\n  extra1 = ejdb.toNull()\r\n}\r\n\r\n-- Preserve order of BSON keys\r\nlocal parrot2 = Q();\r\nparrot2:KV(\"name\", \"Bounty\"):KV(\"type\", \"Cockatoo\"):KV(\"male\", false)\r\nparrot2:KV(\"age\", 15):KV(\"birthdate\",\r\n  ejdb.toDate({ year = 2013, month = 1, day = 1, hour = 0, sec = 1 }))\r\nparrot2:KV(\"likes\", { \"sugar cane\" }):KV(\"extra1\", ejdb.toNull())\r\n\r\n--IF YOU WANT SOME DATA INSPECTIONS:\r\n--print(ejdb.print_bson(parrot2:toBSON()))\r\n--local obj = ejdb.from_bson(parrot2:toBSON())\r\n--print(inspect(obj));\r\n\r\ndb:save(\"parrots2\", parrot1)\r\ndb:save(\"parrots2\", parrot2)\r\n\r\n-- Below two equivalent queries:\r\n-- Q1\r\nlocal res, count, log =\r\ndb:find(\"parrots2\", Q(\"likes\", \"toys\"):OrderBy(\"name asc\", \"age desc\"))\r\nfor i = 1, #res do -- iterate one\r\n  local ob = res:object(i)\r\n  print(\"\" .. ob[\"name\"] .. \" likes toys #1\")\r\nend\r\n\r\n-- Q2\r\nlocal res, count, log =\r\ndb:find(\"parrots2\", Q():F(\"likes\"):Eq(\"toys\"):OrderBy({ name = 1 }, { age = -1 }))\r\nfor i = 1, #res do -- iterate one\r\n  print(\"\" .. res:field(i, \"name\") .. \" likes toys #2\")\r\nend\r\n\r\n-- Second way to iterate\r\nfor vobj, idx in res() do\r\n  print(\"\" .. vobj[\"name\"] .. \" likes toys #3\")\r\nend\r\n\r\ndb:close()\r\n```\r\n**[EJDB Lua binding page](https://github.com/Softmotions/ejdb/blob/master/luaejdb/README.md)**\r\n\r\nEJDB C Library snippet intro\r\n-----------------------------------\r\n\r\n```C\r\n#include <tcejdb/ejdb.h>\r\n\r\nstatic EJDB *jb;\r\n\r\nint main() {\r\n    jb = ejdbnew();\r\n    if (!ejdbopen(jb, \"addressbook\", JBOWRITER | JBOCREAT | JBOTRUNC)) {\r\n        return 1;\r\n    }\r\n    //Get or create collection 'contacts'\r\n    EJCOLL *coll = ejdbcreatecoll(jb, \"contacts\", NULL);\r\n\r\n    bson bsrec;\r\n    bson_oid_t oid;\r\n\r\n    //Insert one record:\r\n    //JSON: {'name' : 'Bruce', 'phone' : '333-222-333', 'age' : 58}\r\n    bson_init(&bsrec);\r\n    bson_append_string(&bsrec, \"name\", \"Bruce\");\r\n    bson_append_string(&bsrec, \"phone\", \"333-222-333\");\r\n    bson_append_int(&bsrec, \"age\", 58);\r\n    bson_finish(&bsrec);\r\n    //Save BSON\r\n    ejdbsavebson(coll, &bsrec, &oid);\r\n    fprintf(stderr, \"\\nSaved Bruce\");\r\n    bson_destroy(&bsrec);\r\n\r\n    //Now execute query\r\n    //QUERY: {'name' : {'$begin' : 'Bru'}} //Name starts with 'Bru' string\r\n    bson bq1;\r\n    bson_init_as_query(&bq1);\r\n    bson_append_start_object(&bq1, \"name\");\r\n    bson_append_string(&bq1, \"$begin\", \"Bru\");\r\n    bson_append_finish_object(&bq1);\r\n    bson_finish(&bq1);\r\n\r\n    EJQ *q1 = ejdbcreatequery(jb, &bq1, NULL, 0, NULL);\r\n\r\n    uint32_t count;\r\n    TCLIST *res = ejdbqryexecute(coll, q1, &count, 0, NULL);\r\n    fprintf(stderr, \"\\n\\nRecords found: %d\\n\", count);\r\n\r\n    //Now print the result set records\r\n    for (int i = 0; i < TCLISTNUM(res); ++i) {\r\n        void *bsdata = TCLISTVALPTR(res, i);\r\n        bson_print_raw(bsdata, 0);\r\n    }\r\n    fprintf(stderr, \"\\n\");\r\n\r\n    //Dispose result set\r\n    tclistdel(res);\r\n\r\n    //Dispose query\r\n    ejdbquerydel(q1);\r\n    bson_destroy(&bq1);\r\n\r\n    //Close database\r\n    ejdbclose(jb);\r\n    ejdbdel(jb);\r\n    return 0;\r\n}\r\n```\r\n\r\nYou can install ejdb c library then save this code in `csnippet.c` And build:\r\n\r\n```sh\r\ngcc -std=c99 -Wall -pedantic  -c -o csnippet.o csnippet.c\r\ngcc -o csnippet csnippet.o  -ltcejdb\r\n```\r\n\r\nLimitations/TODOs\r\n------------------------------------\r\n* Collect collection index statistic\r\n\r\nDocumentation links\r\n------------------------------------\r\n\r\n* **[EJDB Command line interface](https://github.com/Softmotions/ejdb/wiki/EJDB-Command-line-interface)**\r\n* **[NodeJS binding](https://github.com/Softmotions/ejdb#nodejs-binding)**\r\n    * [Installation](https://github.com/Softmotions/ejdb#installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-nodejs-samples)\r\n    * [NodeJS API](https://github.com/Softmotions/ejdb#ejdb-nodejs-api)\r\n* **[Python 2.7/3.x binding](https://github.com/Softmotions/ejdb#ejdb-python-binding)**\r\n* **[Lua binding](https://github.com/Softmotions/ejdb/blob/master/luaejdb/README.md)**\r\n* **[Java binding](https://github.com/Softmotions/ejdb/blob/master/jejdb/)**\r\n* **[Ruby binding](https://github.com/Softmotions/ejdb/blob/master/rbejdb/)**\r\n* **[EJDB C Library](https://github.com/Softmotions/ejdb#ejdb-c-library)**\r\n    * [Building & Installation](https://github.com/Softmotions/ejdb#building--installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-c-samples)\r\n    * [C API](https://github.com/Softmotions/ejdb#c-api)\r\n* **[Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**","google":"UA-36241306-1","note":"Don't delete this file! It's used internally to help with page regeneration."}