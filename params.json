{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Embedded JSON Database engine","name":"EJDB","google":"UA-36241306-1","body":"EJDB aims to be a fast [MongoDB](http://mongodb.org)-like library which can be embedded into C/C++ and [NodeJS](http://nodejs.org) applications under terms of LGPL license.\r\n-------------------------------------------------\r\n\r\nEJDB is the C library based on modified version of [Tokyo Cabinet](http://fallabs.com/tokyocabinet/).\r\nJSON representation of queries and data implemented with API based on [C BSON](https://github.com/mongodb/mongo-c-driver/tree/master/src/)\r\n\r\nNews\r\n===============================\r\n* `2013-02-07` **[Debian packages provided](https://github.com/Softmotions/ejdb/wiki/Debian-Ubuntu-installation)**\r\n* `2013-01-22` **[Collection joins now supported](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**\r\n\r\nFeatures\r\n================================\r\n* LGPL license allows you to embed this library into proprietary software.\r\n* MongoDB-like queries and overall philosophy.\r\n* Collection level write locking.\r\n* Collection level transactions.\r\n* String token matching queries: ```$stror``` ```$strand```\r\n* [Node.js](http://nodejs.org) binding\r\n* [Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)\r\n\r\nDocumentation\r\n================================\r\n\r\n* **[EJDB Command line interface](https://github.com/Softmotions/ejdb/wiki/EJDB-Command-line-interface)**\r\n* **[NodeJS binding](https://github.com/Softmotions/ejdb#nodejs-binding)**\r\n    * [Installation](https://github.com/Softmotions/ejdb#installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-nodejs-samples)\r\n    * [NodeJS API](https://github.com/Softmotions/ejdb#ejdb-nodejs-api)\r\n* **[EJDB C Library](https://github.com/Softmotions/ejdb#ejdb-c-library)**\r\n    * [Building & Installation](https://github.com/Softmotions/ejdb#building--installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-c-samples)\r\n    * [C API](https://github.com/Softmotions/ejdb#c-api)\r\n* **[Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**\r\n\r\nCommunity\r\n================================\r\nWe use [EJDB Google group](http://groups.google.com/group/ejdb) as our mailing list.\r\n\r\nNodeJS snippet intro\r\n---------------------------------\r\n```JavaScript\r\nvar EJDB = require(\"ejdb\");\r\n//Open zoo DB\r\nvar jb = EJDB.open(\"zoo\", EJDB.DEFAULT_OPEN_MODE | EJDB.JBOTRUNC);\r\n\r\nvar parrot1 = {\r\n    \"name\" : \"Grenny\",\r\n    \"type\" : \"African Grey\",\r\n    \"male\" : true,\r\n    \"age\" : 1,\r\n    \"birthdate\" : new Date(),\r\n    \"likes\" : [\"green color\", \"night\", \"toys\"],\r\n    \"extra1\" : null\r\n};\r\nvar parrot2 = {\r\n    \"name\" : \"Bounty\",\r\n    \"type\" : \"Cockatoo\",\r\n    \"male\" : false,\r\n    \"age\" : 15,\r\n    \"birthdate\" : new Date(),\r\n    \"likes\" : [\"sugar cane\"]\r\n};\r\n\r\njb.save(\"parrots\", [parrot1, parrot2], function(err, oids) {\r\n    if (err) {\r\n        console.error(err);\r\n        return;\r\n    }\r\n    console.log(\"Grenny OID: \" + parrot1[\"_id\"]);\r\n    console.log(\"Bounty OID: \" + parrot2[\"_id\"]);\r\n\r\n    jb.find(\"parrots\",\r\n            {\"likes\" : \"toys\"},\r\n            {\"$orderby\" : {\"name\" : 1}},\r\n            function(err, cursor, count) {\r\n                if (err) {\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n                console.log(\"Found \" + count + \" parrots\");\r\n                while (cursor.next()) {\r\n                    console.log(cursor.field(\"name\") + \" likes toys!\");\r\n                }\r\n                cursor.close(); //It's not mandatory to close cursor explicitly\r\n                jb.close(); //Close the database\r\n            });\r\n});\r\n```\r\n\r\nEJDB C Library snippet intro\r\n-----------------------------------\r\n\r\n```C\r\n#include <tcejdb/ejdb.h>\r\n\r\nstatic EJDB *jb;\r\n\r\nint main() {\r\n    jb = ejdbnew();\r\n    if (!ejdbopen(jb, \"addressbook\", JBOWRITER | JBOCREAT | JBOTRUNC)) {\r\n        return 1;\r\n    }\r\n    //Get or create collection 'contacts'\r\n    EJCOLL *coll = ejdbcreatecoll(jb, \"contacts\", NULL);\r\n\r\n    bson bsrec;\r\n    bson_oid_t oid;\r\n\r\n    //Insert one record:\r\n    //JSON: {'name' : 'Bruce', 'phone' : '333-222-333', 'age' : 58}\r\n    bson_init(&bsrec);\r\n    bson_append_string(&bsrec, \"name\", \"Bruce\");\r\n    bson_append_string(&bsrec, \"phone\", \"333-222-333\");\r\n    bson_append_int(&bsrec, \"age\", 58);\r\n    bson_finish(&bsrec);\r\n    //Save BSON\r\n    ejdbsavebson(coll, &bsrec, &oid);\r\n    fprintf(stderr, \"\\nSaved Bruce\");\r\n    bson_destroy(&bsrec);\r\n\r\n    //Now execute query\r\n    //QUERY: {'name' : {'$begin' : 'Bru'}} //Name starts with 'Bru' string\r\n    bson bq1;\r\n    bson_init_as_query(&bq1);\r\n    bson_append_start_object(&bq1, \"name\");\r\n    bson_append_string(&bq1, \"$begin\", \"Bru\");\r\n    bson_append_finish_object(&bq1);\r\n    bson_finish(&bq1);\r\n\r\n    EJQ *q1 = ejdbcreatequery(jb, &bq1, NULL, 0, NULL);\r\n\r\n    uint32_t count;\r\n    TCLIST *res = ejdbqryexecute(coll, q1, &count, 0, NULL);\r\n    fprintf(stderr, \"\\n\\nRecords found: %d\\n\", count);\r\n\r\n    //Now print the result set records\r\n    for (int i = 0; i < TCLISTNUM(res); ++i) {\r\n        void *bsdata = TCLISTVALPTR(res, i);\r\n        bson_print_raw(stderr, bsdata, 0);\r\n    }\r\n    fprintf(stderr, \"\\n\");\r\n\r\n    //Dispose result set\r\n    tclistdel(res);\r\n\r\n    //Dispose query\r\n    ejdbquerydel(q1);\r\n    bson_destroy(&bq1);\r\n\r\n    //Close database\r\n    ejdbclose(jb);\r\n    ejdbdel(jb);\r\n    return 0;\r\n}\r\n```\r\n\r\nYou can install ejdb c library then save this code in `csnippet.c` And build:\r\n\r\n```sh\r\ngcc -std=c99 -Wall -pedantic  -c -o csnippet.o csnippet.c\r\ngcc -std=c99 -Wall -pedantic  -o csnippet csnippet.o  -ltcejdb\r\n```\r\n\r\nLimitations/TODOs\r\n------------------------------------\r\n* Collect collection index statistic\r\n* Windows port\r\n\r\nDocumentation links\r\n------------------------------------\r\n\r\n* **[EJDB Command line interface](https://github.com/Softmotions/ejdb/wiki/EJDB-Command-line-interface)**\r\n* **[NodeJS binding](https://github.com/Softmotions/ejdb#nodejs-binding)**\r\n    * [Installation](https://github.com/Softmotions/ejdb#installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-nodejs-samples)\r\n    * [NodeJS API](https://github.com/Softmotions/ejdb#ejdb-nodejs-api)\r\n    * [Queries](https://github.com/Softmotions/ejdb#find)\r\n* **[EJDB C Library](https://github.com/Softmotions/ejdb#ejdb-c-library)**\r\n    * [Building & Installation](https://github.com/Softmotions/ejdb#building--installation)\r\n    * [Samples](https://github.com/Softmotions/ejdb#ejdb-c-samples)\r\n    * [C API](https://github.com/Softmotions/ejdb#c-api)\r\n* **[Collection joins](https://github.com/Softmotions/ejdb/wiki/Collection-joins)**"}